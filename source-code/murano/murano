#!/bin/bash

:<<'hopper-stack-notice'

Copyright 2016 Hopper-Stack

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

hopper-stack-notice

# +------------------------------------------------------------------+
# | SET PARAMETERS                                                   |
# +------------------------------------------------------------------+
if [ ! -f config ]; then
   echo
   echo "No config file found in current directory"
   echo
   exit
else
   source config
fi

if [ x$ENABLE_ETCHOSTS == xTrue ]; then
   check=`cat /etc/hosts | grep Hopper-Stack | awk '{print $1}'`
   if [ x$check == x ]; then
      cat hosts-file >> /etc/hosts
   fi
fi

# install hopper-repo.repo
if [ ! -f /etc/yum.repos.d/hopper-repo.repo ]; then
   ./yumclient
else
   yum --enablerepo=hopper-repo clean metadata > /dev/null 2>&1
fi

# install NTP
yum install -y ntp
systemctl enable ntpd.service
if [ x$NTPCONFIG != xNone ]; then
   sed -i "/server 0/i server $NTPCONFIG" /etc/ntp.conf
fi
systemctl restart ntpd.service

# disable firewall services
systemctl mask firewalld
systemctl stop firewalld
yum install -y iptables-services
systemctl stop  iptables
systemctl disable iptables
sed -i 's/enforcing/disabled/g' /etc/selinux/config
echo 0 > /sys/fs/selinux/enforce


#### http://egonzalez.org/murano-in-rdo-openstack-manual-installation/
scp 192.168.1.99:/scripts/murano*/* .

yum install -y gcc
yum install -y python-pip
yum install -y python-devel
yum install -y libxml2-devel
yum install -y libxslt-devel
yum install -y libffi-devel
yum install -y postgresql-devel
yum install -y pyOpenSSL
yum install -y mysql
yum install -y MySQL-python
yum install -y python-setuptools 
yum install -y git
yum install -y openssl-devel
yum install -y mariadb-devel
yum install -y haproxy

easy_install pip

pip install tox

# add to controller
mysql -u root -p${DBPASS} <<EOF
CREATE DATABASE murano;
GRANT ALL PRIVILEGES ON murano.* TO 'murano'@'localhost' IDENTIFIED BY '$SERVICE_PWD';
GRANT ALL PRIVILEGES ON murano.* TO 'murano'@'%' IDENTIFIED BY '$SERVICE_PWD';
FLUSH PRIVILEGES;
EOF

echo "SPACE FIXER"
DIR=/var/lib/mysql

mkdir $DIR/murano
cd $DIR/murano
git clone -b stable/kilo git://git.openstack.org/openstack/murano

cd $DIR/murano/murano

tox -e genconfig

cd $DIR/murano/murano/etc/murano
ln -s murano.conf.sample murano.conf

FILE=$DIR/murano/murano/etc/murano/murano.conf
cp $FILE $FILE.orig
echo "[DEFAULT]" > $FILE
echo "debug = true" >> $FILE
echo "verbose = true" >> $FILE
echo "rabbit_hosts = controller1" >> $FILE
echo "rabbit_port=5672" >> $FILE
echo "rabbit_use_ssl=False" >> $FILE
echo "rabbit_userid=openstack" >> $FILE
echo "rabbit_password = rabb1tpass" >> $FILE
echo "rabbit_virtual_host=/" >> $FILE
echo "rabbit_ha_queues=False" >> $FILE
echo "rabbit_notification_exchange=openstack" >> $FILE
echo "rabbit_notification_topic=notifications" >> $FILE
echo "" >> $FILE
echo "[engine]" >> $FILE
echo "[heat]" >> $FILE
echo "[keystone]" >> $FILE
echo "auth_url = 'http://controller1:5000/v2.0'" >> $FILE
echo "" >> $FILE
echo "[matchmaker_redis]" >> $FILE
echo "[matchmaker_ring]" >> $FILE
echo "[networking]" >> $FILE
echo "[neutron]" >> $FILE
echo "[oslo_messaging_amqp]" >> $FILE
echo "[oslo_messaging_qpid]" >> $FILE
echo "" >> $FILE
echo "[oslo_messaging_notifications]" >> $FILE
echo "driver = messagingv2" >> $FILE
echo "" >> $FILE
echo "[packages_opts]" >> $FILE
echo "[ssl]" >> $FILE
echo "[stats]" >> $FILE
echo "" >> $FILE
echo "[oslo_messaging_rabbit]" >> $FILE
echo "" >> $FILE
echo "[database]" >> $FILE
echo "connection = mysql://murano:Serv1cePwd@haproxyvip/murano" >> $FILE
echo "" >> $FILE
echo "[keystone_authtoken]" >> $FILE
echo "auth_uri = 'http://controller1:5000/v2.0'" >> $FILE
echo "auth_host = 'controller1'" >> $FILE
echo "auth_port = 5000" >> $FILE
echo "auth_protocol = http" >> $FILE
echo "admin_tenant_name = service" >> $FILE
echo "admin_user = murano" >> $FILE
echo "admin_password = Serv1cePwd" >> $FILE
echo "" >> $FILE
echo "[murano]" >> $FILE
echo "url = http://controller1:8082" >> $FILE
echo "" >> $FILE
echo "[rabbitmq]" >> $FILE
echo "host = controller1" >> $FILE
echo "port = 5672" >> $FILE
echo "login=openstack" >> $FILE
echo "password=rabb1tpass" >> $FILE
echo "virtual_host=/" >> $FILE
echo "" >> $FILE

cd $DIR/murano/murano
tox

cd $DIR/murano/murano
tox -e venv -- murano-db-manage --config-file ./etc/murano/murano.conf upgrade

# on another terminal
cd $DIR/murano/murano
tox -e venv -- murano-api --config-file ./etc/murano/murano.conf
# on another terminal

cd $DIR/murano/murano
tox -e venv -- murano-manage --config-file ./etc/murano/murano.conf import-package ./meta/io.murano

source /install_dir/admin-openrc.sh

# on controller
openstack user create --password $SERVICE_PWD murano
openstack role add --project service --user murano admin
openstack service create --name muranoapi --description "Murano Project" application-catalog

openstack endpoint create \
   --publicurl http://controller1:8082 \
   --adminurl http://controller1:8082 \
   --internalurl http://controller1:8082 \
   --region RegionOne \
    muranoapi
   sleep 1
   ## 96cf02352b8e4f7bbaa8f5e6e07f5aaf

# on another terminal
cd $DIR/murano/murano
tox -e venv -- murano-engine --config-file ./etc/murano/murano.conf
# on another terminal


# horizon
cd $DIR/murano
git clone git://git.openstack.org/openstack/murano-dashboard
git clone git://git.openstack.org/openstack/horizon

cd horizon
tox -e venv -- pip install -e ../murano-dashboard

cp ../murano-dashboard/muranodashboard/local/_50_murano.py openstack_dashboard/local/enabled/

cp openstack_dashboard/local/local_settings.py.example openstack_dashboard/local/local_settings.py


vim openstack_dashboard/local/local_settings.py

...
ALLOWED_HOSTS = '*'

# Provide OpenStack Lab credentials - comment out the other
OPENSTACK_HOST = 'controller1'

...
### not this one - leave alone
####  SECRET_KEY = 'secret'

...
DEBUG_PROPAGATE_EXCEPTIONS = DEBUG

...
DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.sqlite3',
    'NAME': '/tmp/murano-dashboard.sqlite',
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.db'





tox -e venv -- python manage.py syncdb
answer 'no' for now

# on another terminal
cd $DIR/murano/horizon
tox -e venv -- python manage.py runserver controller1:8888
# on another terminal

source /install_dir/config
cd $DIR/murano
git clone git://git.openstack.org/openstack/murano-apps

cd $DIR/murano/murano
tox -e venv -- murano-manage \
--config-file ./etc/murano/murano.conf \
import-package ../murano-apps/ApacheHTTPServer/package



# add this

neutron net-external-list

vim $DIR/murano/murano/etc/murano/murano.conf

[networking]
external_network = ext-net
router_name = murano-default-router
create_router = true


# update an image
scp 20.176.211.141:/root/ISOs/cloud-linux.qcow2 .

   glance image-create \
      --name "cloud-linux.qcow2" \
      --file cloud-linux.qcow2 \
      --disk-format qcow2 \
      --container-format bare \
      --visibility public \
      --progress





exit

cirros image -good
https://github.com/openstack/murano-deployment/tree/master/contrib/cirros

http://murano.readthedocs.org/en/stable-kilo/articles/client.html
http://murano.readthedocs.org/en/stable-kilo/install/
http://murano-docs.github.io/latest/administrators-guide/content/ch04s03.html

image creation
http://muranotest.readthedocs.org/en/latest/image_builders/linux.html

# image
https://openstack.nimeyo.com/1804/openstack-dev-murano-question-about-murano-installation
https://cloudbase.it/windows-cloud-images/#download

