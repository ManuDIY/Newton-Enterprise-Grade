#!/bin/bash

:<<'hopper-stack-notice'

Copyright 2016 Hopper-Stack

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

hopper-stack-notice

# +------------------------------------------------------------------+
# | SET PARAMETERS                                                   |
# +------------------------------------------------------------------+
if [ ! -f config ]; then
   echo
   echo "No config file found in current directory"
   echo
   exit
else
   source config
fi

if [ x$ENABLE_ETCHOSTS == xTrue ]; then
   check=`cat /etc/hosts | grep Hopper-Stack | awk '{print $1}'`
   if [ x$check == x ]; then
      cat hosts-file >> /etc/hosts
   fi
fi

#  install hopper-repo.repo
# -------------------------
if [ ! -f /etc/yum.repos.d/hopper-repo.repo ]; then
   ./yumclient
else
   yum --enablerepo=hopper-repo clean metadata > /dev/null 2>&1
fi

#  install NTP
# -------------
yum install -y ntp
systemctl enable ntpd.service
if [ x$NTPCONFIG != xNone ]; then
   sed -i "/server 0/i server $NTPCONFIG" /etc/ntp.conf
fi
systemctl restart ntpd.service

#  disable firewall services
# ---------------------------
systemctl mask firewalld
systemctl stop firewalld
yum install -y iptables-services
systemctl stop  iptables
systemctl disable iptables
sed -i 's/enforcing/disabled/g' /etc/selinux/config
echo 0 > /sys/fs/selinux/enforce


#### http://egonzalez.org/murano-in-rdo-openstack-manual-installation/
scp 192.168.1.99:/scripts/murano*/* .

yum install -y gcc python-setuptools python-devel git postgresql-devel libffi-devel openssl-devel

easy_install pip

pip install tox
pip install --upgrade six

# add to controller
mysql -u root -p${DBPASS} <<EOF
CREATE DATABASE murano;
GRANT ALL PRIVILEGES ON murano.* TO 'murano'@'localhost' IDENTIFIED BY '$SERVICE_PWD';
GRANT ALL PRIVILEGES ON murano.* TO 'murano'@'%' IDENTIFIED BY '$SERVICE_PWD';
FLUSH PRIVILEGES;
EOF

### git clone -b stable/liberty git://git.openstack.org/openstack/murano
git clone -b stable/kilo git://git.openstack.org/openstack/murano

cd ~/murano/
pip install -r requirements.txt

python setup.py install

oslo-config-generator --config-file etc/oslo-config-generator/murano.conf

mkdir /etc/murano
cp ~/murano/etc/murano/* /etc/murano/

mv /etc/murano/murano.conf.sample /etc/murano/murano.conf

vim /etc/murano/murano.conf
rabbit_hosts = controller1:5672,controller2:5672,controller3:5672
rabbit_port=5672
rabbit_use_ssl=False
rabbit_userid=openstack
rabbit_password = rabb1tpass
rabbit_virtual_host=/
rabbit_ha_queues=False
rabbit_notification_exchange=openstack
rabbit_notification_topic=notifications

[database]
connection = mysql://murano:Serv1cePwd@haproxyvip/murano

[keystone_authtoken]
auth_uri = http://haproxyvip:5000/v2.0
identity_uri = http://haproxyvip:35357
admin_user = murano
admin_password = Serv1cePwd
admin_tenant_name = service

[murano]
url = http://controller2:8082

[rabbitmq]
#host = controller1:5672,controller2:5672,controller3:5672
host = controller2
port = 5672
login=openstack
password=rabb1tpass
virtual_host=/


# keystone
source /install_dir/admin-openrc.sh

openstack user create --password $SERVICE_PWD murano
openstack role add --project service --user murano admin
openstack service create --name muranoapi --description "Murano Project" application-catalog

openstack endpoint create \
   --publicurl http://controller2:8082 \
   --adminurl http://controller2:8082 \
   --internalurl http://controller2:8082 \
   --region RegionOne \
    muranoapi
   sleep 1


# anogther terminal
http://egonzalez.org/murano-in-rdo-openstack-manual-installation/

# murano-api --config-file /etc/murano/murano.conf
tox -e venv -- murano-api --config-file /etc/murano/murano.conf

# on controller
murano-manage --config-file /etc/murano/murano.conf import-package murano/meta/io.murano

# horizon
git clone -b stable/liberty git://git.openstack.org/openstack/murano-dashboard
git clone -b stable/kilo git://git.openstack.org/openstack/murano-dashboard
cd ~/murano-dashboard
pip install -r requirements.txt
python setup.py install
cp muranodashboard/local/_50_murano.py /usr/share/openstack-dashboard/openstack_dashboard/enabled/
systemctl restart httpd

murano --murano-repo-url="http://storage.apps.openstack.org/" package-import io.murano.apps.apache.ApacheHttpServer

murano --os-username admin --os-password _Flight90 --murano-repo-url="http://storage.apps.openstack.org/" package-import io.murano.apps.apache.ApacheHttpServer







exit

yum install -y gcc
yum install -y python-pip
yum install -y python-devel
yum install -y libxml2-devel
yum install -y libxslt-devel
yum install -y libffi-devel
yum install -y postgresql-devel
yum install -y pyOpenSSL
yum install -y mysql
yum install -y MySQL-python
yum install -y python-setuptools 
yum install -y git
yum install -y openssl-devel
yum install -y mariadb-devel

easy_install pip

pip install tox

# add to controller
mysql -u root -p${DBPASS} <<EOF
CREATE DATABASE murano;
GRANT ALL PRIVILEGES ON murano.* TO 'murano'@'localhost' IDENTIFIED BY '$SERVICE_PWD';
GRANT ALL PRIVILEGES ON murano.* TO 'murano'@'%' IDENTIFIED BY '$SERVICE_PWD';
FLUSH PRIVILEGES;
EOF

mkdir ~/murano
cd ~/murano
git clone -b stable/kilo git://git.openstack.org/openstack/murano
cd ~/murano/murano

####python setup.py build
####python setup.py install

tox -e genconfig

cd ~/murano/murano/etc/murano
ln -s murano.conf.sample murano.conf

###pip install -r requirements.txt

###oslo-config-generator --config-file etc/oslo-config-generator/murano.conf

###mkdir /etc/murano
###cp ~/murano/etc/murano/* /etc/murano/

###cp /etc/murano/murano.conf.sample /etc/murano/murano.conf

###FILE=/etc/murano/murano.conf
FILE=~/murano/murano/etc/murano/murano.conf
cp $FILE $FILE.orig
echo "[DEFAULT]" > $FILE
echo "debug = true" > $FILE
echo "verbose = true" > $FILE
echo "" >> $FILE
echo "[engine]" >> $FILE
echo "[heat]" >> $FILE
echo "[keystone]" >> $FILE
echo "[matchmaker_redis]" >> $FILE
echo "[matchmaker_ring]" >> $FILE
echo "[networking]" >> $FILE
echo "[neutron]" >> $FILE
echo "[oslo_messaging_amqp]" >> $FILE
echo "[oslo_messaging_qpid]" >> $FILE
echo "" >> $FILE
echo "[oslo_messaging_notifications]" >> $FILE
echo "driver = messagingv2" >> $FILE
echo "" >> $FILE
echo "[packages_opts]" >> $FILE
echo "[ssl]" >> $FILE
echo "[stats]" >> $FILE
echo "" >> $FILE
echo "[oslo_messaging_rabbit]" >> $FILE
echo "rabbit_hosts = controller1:5672,controller2:5672,controller3:5672" >> $FILE
echo "rabbit_port=5672" >> $FILE
echo "rabbit_use_ssl=False" >> $FILE
echo "rabbit_userid=openstack" >> $FILE
echo "rabbit_password = rabb1tpass" >> $FILE
echo "rabbit_virtual_host=/" >> $FILE
echo "rabbit_ha_queues=False" >> $FILE
echo "rabbit_notification_exchange=openstack" >> $FILE
echo "rabbit_notification_topic=notifications:5672" >> $FILE
echo "" >> $FILE
echo "[database]" >> $FILE
echo "connection = mysql://murano:Serv1cePwd@haproxyvip/murano" >> $FILE
echo "" >> $FILE
echo "[keystone_authtoken]" >> $FILE
echo "auth_uri = http://haproxyvip:5000" >> $FILE
echo "auth_url = http://haproxyvip:35357" >> $FILE
echo "auth_plugin = password" >> $FILE
echo "project_domain_id = default" >> $FILE
echo "user_domain_id = default" >> $FILE
echo "project_name = service" >> $FILE
echo "username = murano" >> $FILE
echo "password = Serv1cePwd" >> $FILE
echo "" >> $FILE
echo "[murano]" >> $FILE
#echo "url = http://logstash:8082" >> $FILE
echo "url = http://controller1:8082" >> $FILE
echo "" >> $FILE
echo "[rabbitmq]" >> $FILE
echo "host = controller1:5672,controller2:5672,controller3:5672" >> $FILE
echo "login=openstack" >> $FILE
echo "password=rabb1tpass" >> $FILE
echo "virtual_host=/" >> $FILE
echo "" >> $FILE

cd ~/murano/murano
tox

cd ~/murano/murano
tox -e venv -- murano-db-manage \
  --config-file ./etc/murano/murano.conf upgrade

#####  from another terminal
cd ~/murano/murano
tox -e venv -- murano-api --config-file ./etc/murano/murano.conf

cd ~/murano/murano
tox -e venv -- murano-manage --config-file ./etc/murano/murano.conf import-package ./meta/io.murano

#pushd ./meta/io.murano
#zip -r ../../io.murano.zip *
#popd

source /install_dir/admin-openrc.sh
#tox -e venv -- murano \
#  --os-username admin \
#  --os-password _Flight90 \
#  --os-tenant-name admin \
#  --os-auth-url http://haproxyvip:35357/v3 \
#  --murano-url http://controller1:8082 \
#  package-import --is-public io.murano.zip


# on controller
openstack user create --password $SERVICE_PWD murano
openstack role add --project service --user murano admin
openstack service create --name muranoapi --description "Murano Project" application-catalog

openstack endpoint create \
   --publicurl http://controller1:8082 \
   --adminurl http://controller1:8082 \
   --internalurl http://controller1:8082 \
   --region RegionOne \
    muranoapi
   sleep 1
   ## 96cf02352b8e4f7bbaa8f5e6e07f5aaf

#  another console

cd ~/murano/murano
tox -e venv -- murano-engine --config-file ./etc/murano/murano.conf


# horizon
cd ~/murano
git clone git://git.openstack.org/openstack/murano-dashboard
git clone git://git.openstack.org/openstack/horizon

cd horizon
tox -e venv -- pip install -e ../murano-dashboard

cp ../murano-dashboard/muranodashboard/local/_50_murano.py openstack_dashboard/local/enabled/

cp openstack_dashboard/local/local_settings.py.example openstack_dashboard/local/local_settings.py


vim openstack_dashboard/local/local_settings.py

tox -e venv -- python manage.py syncdb
answer 'no' for now

tox -e venv -- python manage.py runserver controller1:8888

cd ~/murano
git clone git://git.openstack.org/openstack/murano-apps

 ### thi sdoesn't work
cd ~/murano/murano
tox -e venv -- murano-manage \
--config-file ./etc/murano/murano.conf \
import-package ../murano-app-incubator/murano-apps

cd ~/murano/horizon
tox -e venv -- python manage.py runserver controller1:8888


exit

http://murano.readthedocs.org/en/stable-kilo/articles/client.html
http://murano.readthedocs.org/en/stable-kilo/install/



# new terminal
murano-api --config-file /etc/murano/murano.conf

# first termnal
cd ~
murano-manage --config-file /etc/murano/murano.conf import-package murano/meta/io.murano

# third terminal
murano-engine --config-file /etc/murano/murano.conf

# on controller
cd
git clone -b stable/kilo git://git.openstack.org/openstack/mlibertyurano-dashboard

yum install -y python-pip
cd ~/murano-dashboard
pip install -r requirements.txt
python setup.py install

cp muranodashboard/local/_50_murano.py /usr/share/openstack-dashboard/openstack_dashboard/enabled/

systemctl restart httpd

source /install_dir/admin-openrc.sh
murano --murano-repo-url="http://storage.apps.openstack.org/" package-import io.murano.apps.apache.ApacheHttpServer









